<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.future.dao.UserMapper">
	<resultMap id="BaseResultMap" type="com.future.domain.User">
		<id column="user_id" property="userId" jdbcType="INTEGER" />
		<result column="user_name" property="userName" jdbcType="VARCHAR" />
		<result column="user_num" property="userNum" jdbcType="VARCHAR" />
		<result column="user_password" property="userPassword"
			jdbcType="VARCHAR" />
		<result column="user_np" property="userNp" jdbcType="INTEGER" />
		<result column="user_report" property="userReport" jdbcType="VARCHAR" />
		<result column="user_duty" property="userDuty" jdbcType="VARCHAR" />
		<result column="user_desc" property="userDesc" jdbcType="VARCHAR" />
		<result column="user_dep" property="userDep" jdbcType="INTEGER" />
		<result column="user_role" property="userRole" jdbcType="INTEGER" />
	</resultMap>
	<sql id="Base_Column_List">
		user_id, user_name, user_num, user_password, user_np, user_report, user_duty,
		user_desc, 
		user_dep, user_role
	</sql>
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from od_user
		where user_id = #{userId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from od_user
		where user_id = #{userId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.future.domain.User">
		insert into od_user (user_id, user_name, user_num,
		user_password, user_np, user_report,
		user_duty, user_desc, user_dep,
		user_role)
		values (#{userId,jdbcType=INTEGER}, #{userName,jdbcType=VARCHAR},
		#{userNum,jdbcType=VARCHAR},
		#{userPassword,jdbcType=VARCHAR}, #{userNp,jdbcType=INTEGER}, #{userReport,jdbcType=VARCHAR},
		#{userDuty,jdbcType=VARCHAR}, #{userDesc,jdbcType=VARCHAR},
		#{userDep,jdbcType=INTEGER},
		#{userRole,jdbcType=INTEGER})
	</insert>
	<insert id="insertSelective" parameterType="com.future.domain.User">
		insert into od_user
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				user_id,
			</if>
			<if test="userName != null">
				user_name,
			</if>
			<if test="userNum != null">
				user_num,
			</if>
			<if test="userPassword != null">
				user_password,
			</if>
			<if test="userNp != null">
				user_np,
			</if>
			<if test="userReport != null">
				user_report,
			</if>
			<if test="userDuty != null">
				user_duty,
			</if>
			<if test="userDesc != null">
				user_desc,
			</if>
			<if test="userDep != null">
				user_dep,
			</if>
			<if test="userRole != null">
				user_role,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="userId != null">
				#{userId,jdbcType=INTEGER},
			</if>
			<if test="userName != null">
				#{userName,jdbcType=VARCHAR},
			</if>
			<if test="userNum != null">
				#{userNum,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				#{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNp != null">
				#{userNp,jdbcType=INTEGER},
			</if>
			<if test="userReport != null">
				#{userReport,jdbcType=VARCHAR},
			</if>
			<if test="userDuty != null">
				#{userDuty,jdbcType=VARCHAR},
			</if>
			<if test="userDesc != null">
				#{userDesc,jdbcType=VARCHAR},
			</if>
			<if test="userDep != null">
				#{userDep,jdbcType=INTEGER},
			</if>
			<if test="userRole != null">
				#{userRole,jdbcType=INTEGER},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.future.domain.User">
		update od_user
		<set>
			<if test="userName != null">
				user_name = #{userName,jdbcType=VARCHAR},
			</if>
			<if test="userNum != null">
				user_num = #{userNum,jdbcType=VARCHAR},
			</if>
			<if test="userPassword != null">
				user_password = #{userPassword,jdbcType=VARCHAR},
			</if>
			<if test="userNp != null">
				user_np = #{userNp,jdbcType=INTEGER},
			</if>
			<if test="userReport != null">
				user_report = #{userReport,jdbcType=VARCHAR},
			</if>
			<if test="userDuty != null">
				user_duty = #{userDuty,jdbcType=VARCHAR},
			</if>
			<if test="userDesc != null">
				user_desc = #{userDesc,jdbcType=VARCHAR},
			</if>
			<if test="userDep != null">
				user_dep = #{userDep,jdbcType=INTEGER},
			</if>
			<if test="userRole != null">
				user_role = #{userRole,jdbcType=INTEGER},
			</if>
		</set>
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.future.domain.User">
		update od_user
		set user_name = #{userName,jdbcType=VARCHAR},
		user_num = #{userNum,jdbcType=VARCHAR},
		<!-- user_password = #{userPassword,jdbcType=VARCHAR}, -->
		user_np = #{userNp,jdbcType=INTEGER},
		user_report = #{userReport,jdbcType=VARCHAR},
		user_duty = #{userDuty,jdbcType=VARCHAR},
		user_desc = #{userDesc,jdbcType=VARCHAR},
		user_dep = #{userDep,jdbcType=INTEGER},
		user_role = #{userRole,jdbcType=INTEGER}
		where user_id = #{userId,jdbcType=INTEGER}
	</update>
	
	
	
	<!--  -->
	<resultMap id="userAndRoleAndDeprtment" type="com.future.domain.User" extends="BaseResultMap">
	
		<association property="role" javaType="com.future.domain.Role">
			<id column="role_id" property="roleId"/>
			<result column="role_name" property="roleName"/>
			<result column="role_desc" property="roleDesc"/>
		</association>
		<association property="department" javaType="com.future.domain.Department">
			<id column="dep_id" property="depId"/>
			<result  column="dep_name" property="depName"/>
			<result  column="dep_desc" property="depDesc"/>
			<result  column="dep_role" property="depRole"/>
			<result  column="dep_manager" property="depManager"/>
		</association>
	</resultMap>
	
	<select id="getAllUser" resultType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		select 
		user.*,role.role_id,role.role_name,role.role_desc,
		dep.dep_id,dep.dep_name,dep.dep_desc,dep.dep_role,dep.dep_manager
		from 
		od_user user,
		od_role role,
		od_department dep
		where user.user_role = role.role_id and user.user_dep = dep.dep_id
	</select>
	
	<!-- 判断登陆 -->
	<select id="login" parameterType="java.lang.String" resultMap="userAndRoleAndDeprtment">
		select 
		user.*,role.role_id,role.role_name,role.role_desc,
		dep.dep_id,dep.dep_name,dep.dep_desc,dep.dep_role,dep.dep_manager
		from 
		od_user user,
		od_role role,
		od_department dep
		where user.user_role = role.role_id and user.user_dep = dep.dep_id and user.user_num =#{username}
	</select>
		
	<!-- 校正厅查询所有处级干部  "userAndRoleAndDeprtment"  BaseResultMap-->
	<select id="getxzAllz" resultType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		<!-- select user.* from od_user user where user.user_np != 3 and user_desc != '1' -->
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_np != 3 and user_desc != '1'
	</select>
	
	
	<!-- <insert id="addTrainRecordBatch" useGeneratedKeys="true" parameterType="java.util.List"> 
		<selectKey resultType="long" keyProperty="id" order="AFTER"> 
		SELECT 
		LAST_INSERT_ID() 
		</selectKey> 
		insert into t_train_record (add_time,emp_id,activity_id,flag) 
		values 
		<foreach collection="list" item="item" index="index" separator="," > 
		(#{item.addTime},#{item.empId},#{item.activityId},#{item.flag}) 
		</foreach> 
	</insert> -->

	<!-- 批量插入评价 -->
	<insert id="insertAll" useGeneratedKeys="true" parameterType="java.util.List">
		insert into od_evaluate(eval_evalby,eval_evalto,eval_rank,eval_cate,eval_desc) 
		values 
		<foreach collection="list" item="evaList" index="index" separator="," > 
		(#{evaList.evalEvalby},#{evaList.evalEvalto},#{evaList.evalRank},#{evaList.evalCate},#{evaList.evalDesc}) 
		</foreach>
	</insert>
	
	
	<!-- 校正厅查询所有分管单位 -->
	<select id="xzAllFenGuanUI" parameterType="java.lang.String" resultMap="userAndRoleAndDeprtment">
		<!-- select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_np != 3 and user_desc != '1' -->
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_desc != '1' and user.user_name != '王清连'and user.user_dep in (select dep_id from od_department where dep_manager = #{name} ) 
	</select>
	
	<!-- 校副厅查询所有分管单位 -->
	<select id="xfAllFenGuanUI" parameterType="java.lang.String" resultMap="userAndRoleAndDeprtment">
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user_desc != '1' and user.user_dep in (select dep_id from od_department where dep_manager = #{name} ) 
	</select>
	
	<!-- 党群查询所有互评的 院系书记副书记 -->
	<select id="dangquanAllHPUser" parameterType="java.lang.String" resultMap="userAndRoleAndDeprtment">
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_role = 4 
	</select>
	
	<!-- 党群查询所有下级 -->
	<select id="dangquanAllDepDwon" parameterType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1
	</select>
	
	<!-- 教学书记  查询所有党群成员 -->
	<select id="JiaoxueShujiGetAlldangqun" resultMap="userAndRoleAndDeprtment">
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_role = 3
	</select>

	<!--教学书记 查询 本单位所有副职  -->
	<select id="jiaoxueshujiAllGetDepDown" parameterType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		<!-- select user.* from od_user user where user.user_dep = #{userDep} and user.user_np = 1 and user.user_role = #{userRole} -->
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1 and  user_desc != '1'
		<!-- select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1 and  user_desc != '1' order by user.user_role -->
	</select>
	
	<!-- 行政教辅部门，与院系院长副院长 互评,拿到所有院系院长副院长的名单 -->
	<select id="XzGetAllYxYz" resultMap="userAndRoleAndDeprtment">		
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_role = 6 and  user_desc != '1'
	</select>
	
	<!-- 行政教辅部门， 对其 所属单位的副职评价 -->
	<select id="XzGetAllDepDown" parameterType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1 and  user_desc != '1' 
	</select>
	
	<!-- 院系院长，与 行政教辅部门 互评 -->
	<select id="YxYzGetXz" resultMap="userAndRoleAndDeprtment">
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_role = 5 and  user_desc != '1' 
	</select>
	
	
	<!-- 院系院长，对本单位所有副职评价，得到所有副职列表 -->
	<select id="YxYzGetAllDepDown" parameterType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">		
		<!-- select user.* from od_user user where user.user_dep = #{userDep} and user.user_np = 1 and user.user_role = #{userRole} -->
		select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1 and  user_desc != '1'
		<!-- select user.*,department.dep_name from od_user user,od_department department where user.user_dep = department.dep_id and user.user_dep = #{userDep} and user.user_np = 1 and  user_desc != '1' order by user.user_role -->

	</select>
	
	<!-- 添加用户时请求Ajax，查询是否存在同名用户 -->
	<select id="ajaxgetisOrNotUser" parameterType="java.lang.String" resultMap="BaseResultMap">
		select user.* from od_user user where user.user_num = #{name}
	</select>

	<!-- 查询所有用户信息，分页显示 -->
	<select id="getPageBeanAllUser" resultMap="userAndRoleAndDeprtment">
		select 
		user.*,role.role_id,role.role_name,role.role_desc,
		dep.dep_id,dep.dep_name,dep.dep_desc,dep.dep_role,dep.dep_manager
		from 
		od_user user,
		od_role role,
		od_department dep
		where user.user_role = role.role_id and user.user_dep = dep.dep_id and user.user_num != 'admin'
		limit #{0},#{1}
	</select>
	
	<!-- 查询总记录书 -->
	<select id="getAllUserNum" resultType="int">
		select count(*) from od_user user where user.user_num != 'admin'
		<!-- select 
		user.*,role.role_id,role.role_name,role.role_desc,
		dep.dep_id,dep.dep_name,dep.dep_desc,dep.dep_role,dep.dep_manager
		from 
		od_user user,
		od_role role,
		od_department dep
		where user.user_role = role.role_id and user.user_dep = dep.dep_id -->
	</select>
	
	<!-- 根据用户名称，查询改用户，模糊查询 -->
	
	<select id="findByNameForUser" resultType="com.future.domain.User" resultMap="userAndRoleAndDeprtment">
		select 
		user.*,role.role_id,role.role_name,role.role_desc,
		dep.dep_id,dep.dep_name,dep.dep_desc,dep.dep_role,dep.dep_manager
		from 
		od_user user,
		od_role role,
		od_department dep
		where user.user_role = role.role_id and user.user_dep = dep.dep_id 
		<if test="userName != null ">
			and user.user_name = #{userName}
		</if>
		<if test="userRole != null">
			and user.user_role = #{userRole}
		</if>
	</select>
	
	<!-- ajax获取所有用户姓名 -->
	<select id="ajaxgetAllUserName" resultType="java.lang.String">
		select user.user_name from od_user user;
	</select>  
	
	<!-- 查询优秀评价结果有多少是副职 -->
	<select id="getUserGoodFuZhi" resultType="int">
		select count(*) from od_user user where user.user_np = 1 and user.user_id in
		 <foreach collection="list" item="goodUserList" index="index"
		    open="(" close=")" separator=",">
		    #{goodUserList}
		 </foreach>
	</select>
	
	<update id="updateDateStatistic" >
		update od_statistics
		set stati_hp = 0,
			stati_ztf = 0,
			stati_ft = 0,
			stati_dw = 0
	</update>
	
	<!-- 根据id重置密码    resetPassword-->
	<update id="resetPassword">
		update od_user set od_user.user_password = '123456' where od_user.user_id = #{0}
	</update>
</mapper>