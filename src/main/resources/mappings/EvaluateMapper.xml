<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.future.dao.EvaluateMapper">
	<resultMap id="BaseResultMap" type="com.future.domain.Evaluate">
		<id column="eval_id" property="evalId" jdbcType="INTEGER" />
		<result column="eval_evalby" property="evalEvalby" jdbcType="INTEGER" />
		<result column="eval_evalto" property="evalEvalto" jdbcType="INTEGER" />
		<result column="eval_rank" property="evalRank" jdbcType="INTEGER" />
		<result column="eval_cate" property="evalCate" jdbcType="INTEGER" />
		<result column="eval_desc" property="evalDesc" jdbcType="VARCHAR" />
	</resultMap>

	<sql id="Base_Column_List">
		eval_id, eval_evalby, eval_evalto, eval_rank, eval_cate, eval_desc
	</sql>
 
	<resultMap id="evalto" type="Evaluate" extends="BaseResultMap">
		<association property="userBy"  javaType="User">
			<result column="user_name" property="userName" jdbcType="VARCHAR" />
			<association property="role" javaType="Role">
				<result column="role_name" property="roleName"></result>
			</association>
			<association  property="department" javaType="Department">
				<result column="dep_name" property="depName"></result>
			</association>
		</association>
	</resultMap>



	<!--查看自己已经评价过的信息-->
	<select id="findEvalByUser" parameterType="hashmap" resultMap="evalto">
		SELECT odr.role_name,ode.dep_name,u.user_name,eval_id,eval_evalby,eval_evalto,eval_rank,eval_cate,eval_desc
		FROM od_evaluate oe join od_user u on u.user_id=oe.eval_evalby
		join od_role odr on odr.role_id=u.user_role join od_department ode on ode.dep_id=u.user_dep
		<where>
			<if test="id != null">
				oe.eval_evalto = #{id}
			</if>
			<if test="name != null">
				and u.user_name = #{name}
			</if>

		</where>
		ORDER BY eval_rank
		<if test="page != null">
			limit #{page.offset},#{page.pageSize}
		</if>
	</select>

	<select id="findEvalByUserCount"  parameterType="hashmap" resultType="int">
		SELECT COUNT(eval_id)
		FROM od_evaluate oe join od_user u on u.user_id=oe.eval_evalby
		join od_role odr on odr.role_id=u.user_role join od_department ode on ode.dep_id=u.user_dep
		<where>
			<if test="id != null">
				oe.eval_evalto = #{id}
			</if>
			<if test="name != null">
				and u.user_name = #{name}
			</if>
		</where>
	</select>

	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from od_evaluate
		where eval_id = #{evalId,jdbcType=INTEGER}
	</select>
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from od_evaluate
		where eval_id = #{evalId,jdbcType=INTEGER}
	</delete>
	<insert id="insert" parameterType="com.future.domain.Evaluate">
		insert into od_evaluate (eval_id, eval_evalby, eval_evalto,
		eval_rank, eval_cate, eval_desc
		)
		values (#{evalId,jdbcType=INTEGER}, #{evalEvalby,jdbcType=INTEGER},
		#{evalEvalto,jdbcType=INTEGER},
		#{evalRank,jdbcType=INTEGER}, #{evalCate,jdbcType=INTEGER}, #{evalDesc,jdbcType=VARCHAR}
		)
	</insert>
	<insert id="insertSelective" parameterType="com.future.domain.Evaluate">
		insert into od_evaluate
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="evalId != null">
				eval_id,
			</if>
			<if test="evalEvalby != null">
				eval_evalby,
			</if>
			<if test="evalEvalto != null">
				eval_evalto,
			</if>
			<if test="evalRank != null">
				eval_rank,
			</if>
			<if test="evalCate != null">
				eval_cate,
			</if>
			<if test="evalDesc != null">
				eval_desc,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="evalId != null">
				#{evalId,jdbcType=INTEGER},
			</if>
			<if test="evalEvalby != null">
				#{evalEvalby,jdbcType=INTEGER},
			</if>
			<if test="evalEvalto != null">
				#{evalEvalto,jdbcType=INTEGER},
			</if>
			<if test="evalRank != null">
				#{evalRank,jdbcType=INTEGER},
			</if>
			<if test="evalCate != null">
				#{evalCate,jdbcType=INTEGER},
			</if>
			<if test="evalDesc != null">
				#{evalDesc,jdbcType=VARCHAR},
			</if>
		</trim>
	</insert>
	<update id="updateByPrimaryKeySelective" parameterType="com.future.domain.Evaluate">
		update od_evaluate
		<set>
			<if test="evalEvalby != null">
				eval_evalby = #{evalEvalby,jdbcType=INTEGER},
			</if>
			<if test="evalEvalto != null">
				eval_evalto = #{evalEvalto,jdbcType=INTEGER},
			</if>
			<if test="evalRank != null">
				eval_rank = #{evalRank,jdbcType=INTEGER},
			</if>
			<if test="evalCate != null">
				eval_cate = #{evalCate,jdbcType=INTEGER},
			</if>
			<if test="evalDesc != null">
				eval_desc = #{evalDesc,jdbcType=VARCHAR},
			</if>
		</set>
		where eval_id = #{evalId,jdbcType=INTEGER}
	</update>
	<update id="updateByPrimaryKey" parameterType="com.future.domain.Evaluate">
		update od_evaluate
		set eval_evalby = #{evalEvalby,jdbcType=INTEGER},
		eval_evalto = #{evalEvalto,jdbcType=INTEGER},
		eval_rank = #{evalRank,jdbcType=INTEGER},
		eval_cate = #{evalCate,jdbcType=INTEGER},
		eval_desc = #{evalDesc,jdbcType=VARCHAR}
		where eval_id = #{evalId,jdbcType=INTEGER}
	</update>
	
	<!-- 校正厅对所有====正职====评价之前，先检查是否评价过 -->
	<select id="getIsOrNoAllZheng" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} and eval_desc=#{evalDesc}
	</select>
	
	<!-- 校正厅对 ====分管单位====领导评价之前，先检查是否评价过 -->
	<select id="getIsOrNoAllFenGuan" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} and eval_desc=#{evalDesc}
	</select>
	
	<!-- 校副厅厅对 ====分管单位====领导评价之前，先检查是否评价过 -->
	<select id="getIsOrNoAllFenGuanXF" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} and eval_desc=#{evalDesc}
	</select>
	
	
	
	
	
	<!-- 党群 ====互评==先检查是否评价过 -->
	<select id="getIsOrNoAllDangQunZHP" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>
	
	<!-- 党群====本单位下级==检查是否评价过 -->
	<select id="getIsOrNoAllDangQunDepDown" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>
	
	
	<!-- 教学书记对其 副职 进行评价之前，检查是否评价过 -->
	<select id="getIsOrNoAllJiaoShuShuJiDepDown" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>
	
	
	
	<!-- 行政教辅部门，与院系院长副院长 互评之前，检查是否评价过 -->
	<select id="getIsOrNoAllYxYz" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>
	
	<!-- 行政教辅部门， 对其 所属单位的副职评价之前，检查是否评价过 -->
	<select id="getIsOrNoAllDepDown" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>

	<!-- 院系院长对本单位所有副职评价，检查时候评价过 -->
	<select id="getIsOrNoAllYxYzDepDown" resultMap="BaseResultMap" parameterType="com.future.domain.Evaluate">
		select *
		from od_evaluate
		where eval_evalto = #{evalEvalto} and eval_cate=#{evalCate} <!-- and eval_desc=#{evalDesc} -->
	</select>
	
	<delete id="delteDateFromEvaluate">
		delete from od_evaluate
	</delete>

	<!-- by zhaoshuo -->
	<resultMap id="UserMap" type="com.future.domain.User">
		<id property="userId" column="user_id"></id>
		<result property="userName" column="user_name"></result>
		<result property="userNp" column="user_np"></result>
		<result property="userDuty" column="user_duty"></result>
		<result property="userDesc" column="user_desc"></result>
	</resultMap>

	<resultMap id="EvaluatedMePeople" type="com.future.domain.Evaluate">
		<id property="evalId" column="eval_id"></id>
		<result property="evalRank" column="eval_rank"></result>
		<result property="evalCate" column="eval_cate"></result>
		<result property="evalDesc" column="eval_desc"></result>
		<association property="evaluatedBy" column="eval_evalby" javaType="com.future.domain.User">
			<result property="userName" column="user_name"></result>
			<result property="userDuty" column="user_duty"></result>
		</association>
	</resultMap>
	<!-- 我评价了谁-->
	<resultMap id="EvaluatedOthersPeople" type="com.future.domain.Evaluate">
		<id property="evalId" column="eval_id"></id>
		<result property="evalRank" column="eval_rank"></result>
		<result property="evalCate" column="eval_cate"></result>
		<result property="evalDesc" column="eval_desc"></result>
		<association property="evaluatedTo" column="eval_evalto" javaType="com.future.domain.User">
			<result property="userName" column="user_name"></result>
			<result property="userDuty" column="user_duty"></result>
		</association>
		
		<!-- 123132132123 -->
		<association property="evalDep"  javaType="com.future.domain.Department">
			<result property="depName" column="dep_name"></result>
		</association>
		
	</resultMap>

	<select id="getAllValuatedByInfo" parameterType="com.future.commonUtils.MyPageBean" resultMap="UserMap">
	  SELECT * FROM od_user WHERE
	  od_user.user_id in (SELECT DISTINCT od_evaluate.eval_evalby from od_evaluate) ORDER  BY od_user.user_id DESC
	  limit ${(currentPage-1)*pageSize}, #{pageSize};
	</select>

	<select id="getAllValuatedToInfo" parameterType="com.future.commonUtils.MyPageBean" resultMap="UserMap">
	  SELECT * FROM od_user WHERE
	  od_user.user_id in (SELECT DISTINCT od_evaluate.eval_evalto from od_evaluate) ORDER  BY od_user.user_id DESC
	  <!-- limit ${(currentPage-1)*pageSize}, #{pageSize}; -->
	</select>

	<!--  查询 被评价的总人数 构造 分页类-->
	<select id="getValuatedByCount" resultType="int">
	  SELECT count(DISTINCT od_evaluate.eval_evalby) from od_evaluate;
	</select>

	<!--  查询 评价的总人数 构造分页类-->
	<select id="getValuatedToCount" resultType="int">
	  SELECT count(DISTINCT od_evaluate.eval_evalto) from od_evaluate;
	</select>

	<select id="getValuatedMe" parameterType="int" resultMap="EvaluatedMePeople">
		select od_evaluate.eval_id,od_evaluate.eval_rank,
		od_evaluate.eval_cate,od_evaluate.eval_desc
		,od_user.user_name,od_user.user_duty
		from od_user, od_evaluate WHERE
		od_evaluate.eval_evalto = od_user.user_id and od_evaluate.eval_evalby = #{meId};
	</select>


	<!--<select id="getValuateByPeople" parameterType="int" resultMap="EvaluatedOthersPeople">
		select od_evaluate.eval_id,od_evaluate.eval_rank,
		od_evaluate.eval_cate,od_evaluate.eval_desc
		,od_user.user_name,od_user.user_duty
		from od_user, od_evaluate WHERE
		od_evaluate.eval_evalby = od_user.user_id and od_evaluate.eval_evalto = #{meId};
	</select>-->
	<select id="getValuateByPeople" parameterType="hashMap" resultMap="EvaluatedOthersPeople">
		select od_evaluate.eval_id,od_evaluate.eval_rank,
		od_evaluate.eval_cate,od_evaluate.eval_desc
		,od_user.user_name,od_user.user_duty
		,od_department.dep_name
		from od_user, od_evaluate,od_department
		<where>
			od_evaluate.eval_evalby = od_user.user_id and od_user.user_dep = od_department.dep_id  
			and od_evaluate.eval_evalto = #{meId}
			<if test="himName != null">
				AND od_user.user_name = #{himName}
			</if>
			<if test="rank != null">
				AND od_evaluate.eval_rank = #{rank}
			</if>
		</where>


	</select>

	<!-- by zhaoshuo -->
	
	
	<!-- <select id="getAllValuatedToInfo" parameterType="com.future.commonUtils.MyPageBean" resultMap="UserMap">
	  SELECT * FROM od_user WHERE
	  od_user.user_id in (SELECT DISTINCT od_evaluate.eval_evalto from od_evaluate) ORDER  BY od_user.user_id DESC
	</select> -->
	
	<select id="getUserByNameLY" parameterType="java.lang.String" resultMap="UserMap">
	  SELECT * FROM od_user user WHERE user.user_name like concat(concat('%'),#{nameLYY},'%')
	</select>

	<select id="getAllDepartment" resultType="String">
		SELECT dep_name FROM od_department
	</select>
	
	<!-- 条件查询以评信息(Integer userId, String fenlei); -->
	<select id="contanueFindByUser" resultMap="evalto">
		SELECT odr.role_name,ode.dep_name,u.user_name,eval_id,eval_evalby,eval_evalto,eval_rank,eval_cate,eval_desc
		FROM od_evaluate oe join od_user u on u.user_id=oe.eval_evalby
		join od_role odr on odr.role_id=u.user_role join od_department ode on ode.dep_id=u.user_dep
		where oe.eval_evalto=#{0} and oe.eval_desc = #{1}
		ORDER BY eval_rank
	</select>
	
	<delete id="deleteByEvalTo" >
		delete from od_evaluate
		where eval_evalto = #{0}
	</delete>

</mapper>